name: Unit Test

on:
  pull_request:
    branches:
      - dev
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: bookwormden_test
        options: >-
          --health-cmd="pg_isready -U testuser"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.13"

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: "22"

    - name: Install backend dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r src/requirements.txt

    - name: Install frontend dependencies
      run: |
        cd src
        npm install

    - name: Set up environment variables
      run: |
        echo "TEST_DB_URI=postgresql://testuser:testpassword@localhost:5432/bookwormden_test" >> $GITHUB_ENV
        echo "FLASK_ENV=testing" >> $GITHUB_ENV

    - name: Set up secrets as environment variables
      run: |
        echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV
        echo "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}" >> $GITHUB_ENV

    - name: Wait for Postgres to be ready
      run: |
        until pg_isready -h localhost -p 5432 -U testuser; do
          sleep 1
        done

    - name: Run backend tests with pytest
      run: |
        cd src/backend_unit_test
        python -m pytest test_db_model.py
        python -m pytest test_book_views.py
        python -m pytest test_user_views.py

    - name: Run frontend tests with Jest
      run: |
        cd src
        npm run test
